{
  "contractName": "NFT",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint64",
          "name": "birthday",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "mintBy",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTotalNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOperator",
          "type": "address"
        }
      ],
      "name": "transferOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "updateNFTName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newurl",
          "type": "string"
        }
      ],
      "name": "setURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"birthday\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"mintBy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newurl\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOperator\",\"type\":\"address\"}],\"name\":\"transferOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"updateNFTName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/wkzq/code/contracts/smartcontract-study/erc721/contracts/NFT/NFTCore.sol\":\"NFT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/wkzq/code/contracts/smartcontract-study/erc721/contracts/NFT/NFTBase.sol\":{\"keccak256\":\"0xb56751082a0cac9a44d7da98fd8e66fd24423dd9bd74011e867241127daf9143\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8f779e23663fe01b48ef30d86346f98d0230af053fde788c3d0ac014e17cc9\",\"dweb:/ipfs/QmRriJ2YzL2opcKtNtYz2q1p8GEWxVrARuxrcc8Gc1S3gF\"]},\"/Users/wkzq/code/contracts/smartcontract-study/erc721/contracts/NFT/NFTCore.sol\":{\"keccak256\":\"0x6b39b1ddea934de1bf0e97fb2025cf30e07de0445ee5acd90923ace3c186776e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bbbb7d8034888039d73e7f723b61278ee918b9bddb15ad3776d78fb57d083f7\",\"dweb:/ipfs/QmVKnnKSwMrRdi98Sd1wz5iT6geBEbN2no2dkYKPMzHeZR\"]},\"/Users/wkzq/code/contracts/smartcontract-study/erc721/contracts/interfaces/INFT.sol\":{\"keccak256\":\"0xa5fe0e4bb6f1b26c4058210b54ac560d1efb8fa278fd86d5ec30490ade7f52c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58035794cdd665a8be2266c9f66322f6598407653c8d61719ecb4ec88ab9597b\",\"dweb:/ipfs/QmYQNikUnXbhWMUYLmRbnyayByDrgVj7EQF4EcdKkNUaJs\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x24141d2f6b98d4cb77a8936eae8cbaad2e261d9062bdc08036096f4550092501\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b710eb003944777135f027500a5a57b479fe857849f5f467c1ef9687401e3c95\",\"dweb:/ipfs/QmcELzi6KRzAs3DXwxdsoKWRJ13KSeipKQsJgD3unctdZM\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x3fef0eeb248c7109ce0f9adce59543d8b4141b78382d3ec34db33dabdbbc13f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f704e6539b9db8b7bf08b8a1c1cb2b44519129b5659211ed5af8f2aa5f264a2f\",\"dweb:/ipfs/QmYRPbn7p8oTEKNUrd7YMMA2J8W6vUeFmCcCMGvyWdZ6UB\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x61321d2c86346045bf394885ee3afeecc65f9daad2694bc19110967588fd7b5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1703b877203e0447ede72dcf73f1c4f2089b415bd1c44877904128a64fafed5b\",\"dweb:/ipfs/QmaZoYDo2FWtKcwCc9zuabU6zri8KV9xJrhU614d93sLid\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xd918cca1b659f588a6d12d05fd7196179a8b1eac9133d7f77da7ef3133e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c75d578f42e2e2e427b934e6c41cc759be2d0a52155868308e915328c8feb2b\",\"dweb:/ipfs/QmbFNHtWAoNhe82Hy6yKTePWJRczqzp1APSBfLS9XfAN6e\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x2690a9b7f4f7489b8d25a4fc6bffc02ec3971fb41ed6c8b59adef2833bdab07c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8148c99452b6793ac9599abdc8bdaf4eeb47f34590beea8aa01089be14e2990c\",\"dweb:/ipfs/QmNdenmZ4EDfH9TuBas3pHeGuZvDNo2rsfgUj6ka8vuH37\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620034d4380380620034d4833981810160405260208110156200003757600080fd5b81019080805190602001909291905050506040518060200160405280600081525060006200006a620001aa60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350620001206301ffc9a760e01b620001b260201b60201c565b6200013181620002bc60201b60201c565b6200014963d9b67a2660e01b620001b260201b60201c565b62000161630e89341c60e01b620001b260201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200038e565b600033905090565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156200024f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b600160036000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b8060069080519060200190620002d4929190620002d8565b5050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200031057600085556200035c565b82601f106200032b57805160ff19168380011785556200035c565b828001600101855582156200035c579182015b828111156200035b5782518255916020019190600101906200033e565b5b5090506200036b91906200036f565b5090565b5b808211156200038a57600081600090555060010162000370565b5090565b613136806200039e6000396000f3fe608060405234801561001057600080fd5b50600436106101155760003560e01c8063576f7ea7116100a2578063a22cb46511610071578063a22cb465146109b4578063bcf16f2d14610a04578063e985e9c514610a22578063f242432a14610a9c578063f2fde38b14610bab57610115565b8063576f7ea7146108425780636a6278421461091e578063715018a6146109765780638da5cb5b1461098057610115565b806329605e77116100e957806329605e77146103415780632eb2c2d61461038557806331fe7078146105a85780634e1273f41461066d578063570ca7351461080e57610115565b8062fdd58e1461011a57806301ffc9a71461017c57806302fe5305146101df5780630e89341c1461029a575b600080fd5b6101666004803603604081101561013057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bef565b6040518082815260200191505060405180910390f35b6101c76004803603602081101561019257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610ccf565b60405180821515815260200191505060405180910390f35b610298600480360360208110156101f557600080fd5b810190808035906020019064010000000081111561021257600080fd5b82018360208201111561022457600080fd5b8035906020019184600183028401116401000000008311171561024657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610d37565b005b6102c6600480360360208110156102b057600080fd5b8101908080359060200190929190505050610df2565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103065780820151818401526020810190506102eb565b50505050905090810190601f1680156103335780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103836004803603602081101561035757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e96565b005b6105a6600480360360a081101561039b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156103f857600080fd5b82018360208201111561040a57600080fd5b8035906020019184602083028401116401000000008311171561042c57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561048c57600080fd5b82018360208201111561049e57600080fd5b803590602001918460208302840111640100000000831117156104c057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561052057600080fd5b82018360208201111561053257600080fd5b8035906020019184600183028401116401000000008311171561055457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610f89565b005b61066b600480360360408110156105be57600080fd5b8101908080359060200190929190803590602001906401000000008111156105e557600080fd5b8201836020820111156105f757600080fd5b8035906020019184600183028401116401000000008311171561061957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611414565b005b6107b76004803603604081101561068357600080fd5b81019080803590602001906401000000008111156106a057600080fd5b8201836020820111156106b257600080fd5b803590602001918460208302840111640100000000831117156106d457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561073457600080fd5b82018360208201111561074657600080fd5b8035906020019184602083028401116401000000008311171561076857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929050505061151b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107fa5780820151818401526020810190506107df565b505050509050019250505060405180910390f35b61081661162d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61086e6004803603602081101561085857600080fd5b8101908080359060200190929190505050611653565b60405180858152602001806020018467ffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828103825285818151815260200191508051906020019080838360005b838110156108e05780820151818401526020810190506108c5565b50505050905090810190601f16801561090d5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b6109606004803603602081101561093457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061177f565b6040518082815260200191505060405180910390f35b61097e6119c9565b005b610988611b36565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a02600480360360408110156109ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611b5f565b005b610a0c611cf8565b6040518082815260200191505060405180910390f35b610a8460048036036040811015610a3857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d05565b60405180821515815260200191505060405180910390f35b610ba9600480360360a0811015610ab257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190640100000000811115610b2357600080fd5b820183602082011115610b3557600080fd5b80359060200191846001830284011164010000000083111715610b5757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611d99565b005b610bed60048036036020811015610bc157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061210e565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612f6b602b913960400191505060405180910390fd5b6004600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060036000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b610d3f612300565b73ffffffffffffffffffffffffffffffffffffffff16610d5d611b36565b73ffffffffffffffffffffffffffffffffffffffff1614610de6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610def81612308565b50565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e8a5780601f10610e5f57610100808354040283529160200191610e8a565b820191906000526020600020905b815481529060010190602001808311610e6d57829003601f168201915b50505050509050919050565b610e9e612300565b73ffffffffffffffffffffffffffffffffffffffff16610ebc611b36565b73ffffffffffffffffffffffffffffffffffffffff1614610f45576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8151835114610fe3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806130b86028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611069576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612fe56025913960400191505060405180910390fd5b611071612300565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806110b757506110b6856110b1612300565b611d05565b5b61110c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603281526020018061300a6032913960400191505060405180910390fd5b6000611116612300565b9050611126818787878787612322565b60005b84518110156112f757600085828151811061114057fe5b60200260200101519050600085838151811061115857fe5b602002602001015190506111df816040518060600160405280602a815260200161303c602a91396004600086815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461232a9092919063ffffffff16565b6004600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611296816004600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123e490919063ffffffff16565b6004600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050806001019050611129565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156113a757808201518184015260208101905061138c565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156113e95780820151818401526020810190506113ce565b5050505090500194505050505060405180910390a461140c81878787878761246c565b505050505050565b61141c611b36565b73ffffffffffffffffffffffffffffffffffffffff1661143a612300565b73ffffffffffffffffffffffffffffffffffffffff16148061146c5750600161146a611464612300565b84610bef565b145b6114de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f5065726d697373696f6e206465696e656400000000000000000000000000000081525060200191505060405180910390fd5b6000600283815481106114ed57fe5b9060005260206000209060020201905081816000019080519060200190611515929190612d8f565b50505050565b60608151835114611577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061308f6029913960400191505060405180910390fd5b6000835167ffffffffffffffff8111801561159157600080fd5b506040519080825280602002602001820160405280156115c05781602001602082028036833780820191505090505b50905060005b8451811015611622576115ff8582815181106115de57fe5b60200260200101518583815181106115f257fe5b6020026020010151610bef565b82828151811061160b57fe5b6020026020010181815250508060010190506115c6565b508091505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606060008060006002868154811061166957fe5b906000526020600020906002020190508060010160009054906101000a900463ffffffff1663ffffffff169450806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561172e5780601f106117035761010080835404028352916020019161172e565b820191906000526020600020905b81548152906001019060200180831161171157829003601f168201915b505050505093508060010160049054906101000a900467ffffffffffffffff16925080600101600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150509193509193565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117c2612300565b73ffffffffffffffffffffffffffffffffffffffff161461184b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5065726d697373696f6e204465696e650000000000000000000000000000000081525060200191505060405180910390fd5b60006002805490509050600060405180608001604052806040518060200160405280600081525081526020018363ffffffff1681526020014267ffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152509050600281908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190805190602001906118f7929190612d8f565b5060208201518160010160006101000a81548163ffffffff021916908363ffffffff16021790555060408201518160010160046101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550606082015181600101600c6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506119b9848363ffffffff166001604051806020016040528060008152506127fb565b8163ffffffff1692505050919050565b6119d1612300565b73ffffffffffffffffffffffffffffffffffffffff166119ef611b36565b73ffffffffffffffffffffffffffffffffffffffff1614611a78576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8173ffffffffffffffffffffffffffffffffffffffff16611b7e612300565b73ffffffffffffffffffffffffffffffffffffffff161415611beb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806130666029913960400191505060405180910390fd5b8060056000611bf8612300565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611ca5612300565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6000600280549050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611e1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612fe56025913960400191505060405180910390fd5b611e27612300565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480611e6d5750611e6c85611e67612300565b611d05565b5b611ec2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612fbc6029913960400191505060405180910390fd5b6000611ecc612300565b9050611eec818787611edd886129fe565b611ee6886129fe565b87612322565b611f69836040518060600160405280602a815260200161303c602a91396004600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461232a9092919063ffffffff16565b6004600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612020836004600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123e490919063ffffffff16565b6004600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4612106818787878787612a6f565b505050505050565b612116612300565b73ffffffffffffffffffffffffffffffffffffffff16612134611b36565b73ffffffffffffffffffffffffffffffffffffffff16146121bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612243576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612f966026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b806006908051906020019061231e929190612d8f565b5050565b505050505050565b60008383111582906123d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561239c578082015181840152602081019050612381565b50505050905090810190601f1680156123c95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015612462576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b61248b8473ffffffffffffffffffffffffffffffffffffffff16612d7c565b156127f3578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015612543578082015181840152602081019050612528565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561258557808201518184015260208101905061256a565b50505050905001848103825285818151815260200191508051906020019080838360005b838110156125c45780820151818401526020810190506125a9565b50505050905090810190601f1680156125f15780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b15801561261657600080fd5b505af192505050801561264a57506040513d602081101561263657600080fd5b810190808051906020019092919050505060015b61275457612656612e58565b806126615750612703565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156126c85780820151818401526020810190506126ad565b50505050905090810190601f1680156126f55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180612f0f6034913960400191505060405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146127f1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612f436028913960400191505060405180910390fd5b505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415612881576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806130e06021913960400191505060405180910390fd5b600061288b612300565b90506128ac8160008761289d886129fe565b6128a6886129fe565b87612322565b61290f836004600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123e490919063ffffffff16565b6004600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a46129f781600087878787612a6f565b5050505050565b60606000600167ffffffffffffffff81118015612a1a57600080fd5b50604051908082528060200260200182016040528015612a495781602001602082028036833780820191505090505b5090508281600081518110612a5a57fe5b60200260200101818152505080915050919050565b612a8e8473ffffffffffffffffffffffffffffffffffffffff16612d7c565b15612d74578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612b47578082015181840152602081019050612b2c565b50505050905090810190601f168015612b745780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015612b9757600080fd5b505af1925050508015612bcb57506040513d6020811015612bb757600080fd5b810190808051906020019092919050505060015b612cd557612bd7612e58565b80612be25750612c84565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c49578082015181840152602081019050612c2e565b50505050905090810190601f168015612c765780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180612f0f6034913960400191505060405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614612d72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612f436028913960400191505060405180910390fd5b505b505050505050565b600080823b905060008111915050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282612dc55760008555612e0c565b82601f10612dde57805160ff1916838001178555612e0c565b82800160010185558215612e0c579182015b82811115612e0b578251825591602001919060010190612df0565b5b509050612e199190612e1d565b5090565b5b80821115612e36576000816000905550600101612e1e565b5090565b6000601f19601f8301169050919050565b60008160e01c9050919050565b600060443d1015612e6857612f0b565b60046000803e612e79600051612e4b565b6308c379a08114612e8a5750612f0b565b60405160043d036004823e80513d602482011167ffffffffffffffff82111715612eb657505050612f0b565b808201805167ffffffffffffffff811115612ed5575050505050612f0b565b8060208301013d8501811115612ef057505050505050612f0b565b612ef982612e3a565b60208401016040528296505050505050505b9056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368455243313135353a206d696e7420746f20746865207a65726f2061646472657373a26469706673582212209a45ecf43e8d968ce7934ea5b5f1950437acbd6f1d94d2e235aca5ac1654707864736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101155760003560e01c8063576f7ea7116100a2578063a22cb46511610071578063a22cb465146109b4578063bcf16f2d14610a04578063e985e9c514610a22578063f242432a14610a9c578063f2fde38b14610bab57610115565b8063576f7ea7146108425780636a6278421461091e578063715018a6146109765780638da5cb5b1461098057610115565b806329605e77116100e957806329605e77146103415780632eb2c2d61461038557806331fe7078146105a85780634e1273f41461066d578063570ca7351461080e57610115565b8062fdd58e1461011a57806301ffc9a71461017c57806302fe5305146101df5780630e89341c1461029a575b600080fd5b6101666004803603604081101561013057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bef565b6040518082815260200191505060405180910390f35b6101c76004803603602081101561019257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610ccf565b60405180821515815260200191505060405180910390f35b610298600480360360208110156101f557600080fd5b810190808035906020019064010000000081111561021257600080fd5b82018360208201111561022457600080fd5b8035906020019184600183028401116401000000008311171561024657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610d37565b005b6102c6600480360360208110156102b057600080fd5b8101908080359060200190929190505050610df2565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103065780820151818401526020810190506102eb565b50505050905090810190601f1680156103335780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103836004803603602081101561035757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e96565b005b6105a6600480360360a081101561039b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156103f857600080fd5b82018360208201111561040a57600080fd5b8035906020019184602083028401116401000000008311171561042c57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561048c57600080fd5b82018360208201111561049e57600080fd5b803590602001918460208302840111640100000000831117156104c057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561052057600080fd5b82018360208201111561053257600080fd5b8035906020019184600183028401116401000000008311171561055457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610f89565b005b61066b600480360360408110156105be57600080fd5b8101908080359060200190929190803590602001906401000000008111156105e557600080fd5b8201836020820111156105f757600080fd5b8035906020019184600183028401116401000000008311171561061957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611414565b005b6107b76004803603604081101561068357600080fd5b81019080803590602001906401000000008111156106a057600080fd5b8201836020820111156106b257600080fd5b803590602001918460208302840111640100000000831117156106d457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561073457600080fd5b82018360208201111561074657600080fd5b8035906020019184602083028401116401000000008311171561076857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929050505061151b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107fa5780820151818401526020810190506107df565b505050509050019250505060405180910390f35b61081661162d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61086e6004803603602081101561085857600080fd5b8101908080359060200190929190505050611653565b60405180858152602001806020018467ffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828103825285818151815260200191508051906020019080838360005b838110156108e05780820151818401526020810190506108c5565b50505050905090810190601f16801561090d5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b6109606004803603602081101561093457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061177f565b6040518082815260200191505060405180910390f35b61097e6119c9565b005b610988611b36565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a02600480360360408110156109ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611b5f565b005b610a0c611cf8565b6040518082815260200191505060405180910390f35b610a8460048036036040811015610a3857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d05565b60405180821515815260200191505060405180910390f35b610ba9600480360360a0811015610ab257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190640100000000811115610b2357600080fd5b820183602082011115610b3557600080fd5b80359060200191846001830284011164010000000083111715610b5757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611d99565b005b610bed60048036036020811015610bc157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061210e565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612f6b602b913960400191505060405180910390fd5b6004600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060036000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b610d3f612300565b73ffffffffffffffffffffffffffffffffffffffff16610d5d611b36565b73ffffffffffffffffffffffffffffffffffffffff1614610de6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610def81612308565b50565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e8a5780601f10610e5f57610100808354040283529160200191610e8a565b820191906000526020600020905b815481529060010190602001808311610e6d57829003601f168201915b50505050509050919050565b610e9e612300565b73ffffffffffffffffffffffffffffffffffffffff16610ebc611b36565b73ffffffffffffffffffffffffffffffffffffffff1614610f45576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8151835114610fe3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806130b86028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611069576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612fe56025913960400191505060405180910390fd5b611071612300565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806110b757506110b6856110b1612300565b611d05565b5b61110c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603281526020018061300a6032913960400191505060405180910390fd5b6000611116612300565b9050611126818787878787612322565b60005b84518110156112f757600085828151811061114057fe5b60200260200101519050600085838151811061115857fe5b602002602001015190506111df816040518060600160405280602a815260200161303c602a91396004600086815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461232a9092919063ffffffff16565b6004600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611296816004600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123e490919063ffffffff16565b6004600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050806001019050611129565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156113a757808201518184015260208101905061138c565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156113e95780820151818401526020810190506113ce565b5050505090500194505050505060405180910390a461140c81878787878761246c565b505050505050565b61141c611b36565b73ffffffffffffffffffffffffffffffffffffffff1661143a612300565b73ffffffffffffffffffffffffffffffffffffffff16148061146c5750600161146a611464612300565b84610bef565b145b6114de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f5065726d697373696f6e206465696e656400000000000000000000000000000081525060200191505060405180910390fd5b6000600283815481106114ed57fe5b9060005260206000209060020201905081816000019080519060200190611515929190612d8f565b50505050565b60608151835114611577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061308f6029913960400191505060405180910390fd5b6000835167ffffffffffffffff8111801561159157600080fd5b506040519080825280602002602001820160405280156115c05781602001602082028036833780820191505090505b50905060005b8451811015611622576115ff8582815181106115de57fe5b60200260200101518583815181106115f257fe5b6020026020010151610bef565b82828151811061160b57fe5b6020026020010181815250508060010190506115c6565b508091505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606060008060006002868154811061166957fe5b906000526020600020906002020190508060010160009054906101000a900463ffffffff1663ffffffff169450806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561172e5780601f106117035761010080835404028352916020019161172e565b820191906000526020600020905b81548152906001019060200180831161171157829003601f168201915b505050505093508060010160049054906101000a900467ffffffffffffffff16925080600101600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150509193509193565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117c2612300565b73ffffffffffffffffffffffffffffffffffffffff161461184b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5065726d697373696f6e204465696e650000000000000000000000000000000081525060200191505060405180910390fd5b60006002805490509050600060405180608001604052806040518060200160405280600081525081526020018363ffffffff1681526020014267ffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152509050600281908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190805190602001906118f7929190612d8f565b5060208201518160010160006101000a81548163ffffffff021916908363ffffffff16021790555060408201518160010160046101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550606082015181600101600c6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506119b9848363ffffffff166001604051806020016040528060008152506127fb565b8163ffffffff1692505050919050565b6119d1612300565b73ffffffffffffffffffffffffffffffffffffffff166119ef611b36565b73ffffffffffffffffffffffffffffffffffffffff1614611a78576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8173ffffffffffffffffffffffffffffffffffffffff16611b7e612300565b73ffffffffffffffffffffffffffffffffffffffff161415611beb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806130666029913960400191505060405180910390fd5b8060056000611bf8612300565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611ca5612300565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6000600280549050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611e1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612fe56025913960400191505060405180910390fd5b611e27612300565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480611e6d5750611e6c85611e67612300565b611d05565b5b611ec2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612fbc6029913960400191505060405180910390fd5b6000611ecc612300565b9050611eec818787611edd886129fe565b611ee6886129fe565b87612322565b611f69836040518060600160405280602a815260200161303c602a91396004600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461232a9092919063ffffffff16565b6004600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612020836004600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123e490919063ffffffff16565b6004600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4612106818787878787612a6f565b505050505050565b612116612300565b73ffffffffffffffffffffffffffffffffffffffff16612134611b36565b73ffffffffffffffffffffffffffffffffffffffff16146121bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612243576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612f966026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b806006908051906020019061231e929190612d8f565b5050565b505050505050565b60008383111582906123d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561239c578082015181840152602081019050612381565b50505050905090810190601f1680156123c95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015612462576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b61248b8473ffffffffffffffffffffffffffffffffffffffff16612d7c565b156127f3578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015612543578082015181840152602081019050612528565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561258557808201518184015260208101905061256a565b50505050905001848103825285818151815260200191508051906020019080838360005b838110156125c45780820151818401526020810190506125a9565b50505050905090810190601f1680156125f15780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b15801561261657600080fd5b505af192505050801561264a57506040513d602081101561263657600080fd5b810190808051906020019092919050505060015b61275457612656612e58565b806126615750612703565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156126c85780820151818401526020810190506126ad565b50505050905090810190601f1680156126f55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180612f0f6034913960400191505060405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146127f1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612f436028913960400191505060405180910390fd5b505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415612881576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806130e06021913960400191505060405180910390fd5b600061288b612300565b90506128ac8160008761289d886129fe565b6128a6886129fe565b87612322565b61290f836004600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123e490919063ffffffff16565b6004600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a46129f781600087878787612a6f565b5050505050565b60606000600167ffffffffffffffff81118015612a1a57600080fd5b50604051908082528060200260200182016040528015612a495781602001602082028036833780820191505090505b5090508281600081518110612a5a57fe5b60200260200101818152505080915050919050565b612a8e8473ffffffffffffffffffffffffffffffffffffffff16612d7c565b15612d74578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612b47578082015181840152602081019050612b2c565b50505050905090810190601f168015612b745780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015612b9757600080fd5b505af1925050508015612bcb57506040513d6020811015612bb757600080fd5b810190808051906020019092919050505060015b612cd557612bd7612e58565b80612be25750612c84565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c49578082015181840152602081019050612c2e565b50505050905090810190601f168015612c765780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180612f0f6034913960400191505060405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614612d72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612f436028913960400191505060405180910390fd5b505b505050505050565b600080823b905060008111915050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282612dc55760008555612e0c565b82601f10612dde57805160ff1916838001178555612e0c565b82800160010185558215612e0c579182015b82811115612e0b578251825591602001919060010190612df0565b5b509050612e199190612e1d565b5090565b5b80821115612e36576000816000905550600101612e1e565b5090565b6000601f19601f8301169050919050565b60008160e01c9050919050565b600060443d1015612e6857612f0b565b60046000803e612e79600051612e4b565b6308c379a08114612e8a5750612f0b565b60405160043d036004823e80513d602482011167ffffffffffffffff82111715612eb657505050612f0b565b808201805167ffffffffffffffff811115612ed5575050505050612f0b565b8060208301013d8501811115612ef057505050505050612f0b565b612ef982612e3a565b60208401016040528296505050505050505b9056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368455243313135353a206d696e7420746f20746865207a65726f2061646472657373a26469706673582212209a45ecf43e8d968ce7934ea5b5f1950437acbd6f1d94d2e235aca5ac1654707864736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1063:14",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "55:54:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "65:38:14",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "83:5:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "90:2:14",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "79:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:14:14"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "99:2:14",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "95:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "95:7:14"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "75:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "75:28:14"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "65:6:14"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "38:5:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "48:6:14",
                "type": ""
              }
            ],
            "src": "7:102:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "168:53:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "178:36:14",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "203:3:14",
                        "type": "",
                        "value": "224"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "208:5:14"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "199:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "199:15:14"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "178:8:14"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_224_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "149:5:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "159:8:14",
                "type": ""
              }
            ],
            "src": "115:106:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "270:790:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:9:14",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "312:5:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [],
                        "functionName": {
                          "name": "returndatasize",
                          "nodeType": "YulIdentifier",
                          "src": "286:14:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "286:16:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:4:14",
                        "type": "",
                        "value": "0x44"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "283:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "283:26:14"
                  },
                  "nodeType": "YulIf",
                  "src": "280:2:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "344:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "347:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "350:1:14",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "returndatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "329:14:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "329:23:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "329:23:14"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "361:45:14",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "403:1:14",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "397:5:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "397:8:14"
                      }
                    ],
                    "functionName": {
                      "name": "shift_right_224_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "372:24:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:34:14"
                  },
                  "variables": [
                    {
                      "name": "sig",
                      "nodeType": "YulTypedName",
                      "src": "365:3:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "446:9:14",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "448:5:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "sig",
                            "nodeType": "YulIdentifier",
                            "src": "428:3:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "433:10:14",
                            "type": "",
                            "value": "0x08c379a0"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "425:2:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "425:19:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "418:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:27:14"
                  },
                  "nodeType": "YulIf",
                  "src": "415:2:14"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "465:21:14",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "483:2:14",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "477:5:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "477:9:14"
                  },
                  "variables": [
                    {
                      "name": "data",
                      "nodeType": "YulTypedName",
                      "src": "469:4:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "510:4:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "516:1:14",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "523:14:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "523:16:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "541:1:14",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "519:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "519:24:14"
                      }
                    ],
                    "functionName": {
                      "name": "returndatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "495:14:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:49:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:49:14"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "554:25:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "574:4:14"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "568:5:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "568:11:14"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "558:6:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "705:29:14",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "719:5:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "610:6:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "618:18:14",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "607:2:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "607:30:14"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "658:6:14"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "666:4:14",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "654:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "654:17:14"
                          },
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "673:14:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "673:16:14"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "651:2:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "651:39:14"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "591:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "591:113:14"
                  },
                  "nodeType": "YulIf",
                  "src": "588:2:14"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "744:28:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "759:4:14"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "765:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "755:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "755:17:14"
                  },
                  "variables": [
                    {
                      "name": "msg",
                      "nodeType": "YulTypedName",
                      "src": "748:3:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "781:24:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "msg",
                        "nodeType": "YulIdentifier",
                        "src": "801:3:14"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "795:5:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "795:10:14"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "785:6:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "848:9:14",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "850:5:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "820:6:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "828:18:14",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "817:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "817:30:14"
                  },
                  "nodeType": "YulIf",
                  "src": "814:2:14"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "867:38:14",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "msg",
                            "nodeType": "YulIdentifier",
                            "src": "886:3:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "891:4:14",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "882:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "882:14:14"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "898:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "878:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "878:27:14"
                  },
                  "variables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "871:3:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "954:9:14",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "956:5:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "920:3:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "929:4:14"
                          },
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "935:14:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "935:16:14"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "925:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "925:27:14"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "917:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "917:36:14"
                  },
                  "nodeType": "YulIf",
                  "src": "914:2:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "980:2:14",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "msg",
                                "nodeType": "YulIdentifier",
                                "src": "992:3:14"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "997:4:14",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "988:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "988:14:14"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1026:6:14"
                              }
                            ],
                            "functionName": {
                              "name": "round_up_to_mul_of_32",
                              "nodeType": "YulIdentifier",
                              "src": "1004:21:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1004:29:14"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "984:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "984:50:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "973:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:62:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "973:62:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1044:10:14",
                  "value": {
                    "name": "msg",
                    "nodeType": "YulIdentifier",
                    "src": "1051:3:14"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1044:3:14"
                    }
                  ]
                }
              ]
            },
            "name": "try_decode_error_message",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "266:3:14",
                "type": ""
              }
            ],
            "src": "227:833:14"
          }
        ]
      },
      "contents": "{\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        returndatacopy(0, 0, 4)\n        let sig := shift_right_224_unsigned(mload(0))\n        if iszero(eq(sig, 0x08c379a0)) { leave }\n\n        let data := mload(64)\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, returndatasize())) { leave }\n\n        mstore(64, add(add(msg, 0x20), round_up_to_mul_of_32(length)))\n        ret := msg\n    }\n\n}\n",
      "id": 14,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "177:751:1:-:0;;;225:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1976:354:8;;;;;;;;;;;;884:17:4;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;768:40:5;435:10;787:20;;768:18;;;:40;;:::i;:::-;2026:13:8;2034:4;2026:7;;;:13;;:::i;:::-;2128:41;1764:10;2147:21;;2128:18;;;:41;;:::i;:::-;2269:54;1916:10;2288:34;;2269:18;;;:54;;:::i;:::-;1976:354;281:9:1;270:8;;:20;;;;;;;;;;;;;;;;;;225:70;177:751;;598:104:13;651:15;685:10;678:17;;598:104;:::o;1507:198:5:-;1605:10;1590:25;;:11;:25;;;;;1582:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1694:4;1658:20;:33;1679:11;1658:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1507:198;:::o;7541:86:8:-;7614:6;7607:4;:13;;;;;;;;;;;;:::i;:::-;;7541:86;:::o;177:751:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "177:751:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2976:228:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;965:148:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;842:83:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2729:105:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;823:101:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5534:1184:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;616:222:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3361:530:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;181:23:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;435:265;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;299:313:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1717:145:4;;;:::i;:::-;;1085:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3959:306:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;704:84:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4332:166:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4565:897;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2011:240:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2976:228:8;3062:7;3108:1;3089:21;;:7;:21;;;;3081:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3175:9;:13;3185:2;3175:13;;;;;;;;;;;:22;3189:7;3175:22;;;;;;;;;;;;;;;;3168:29;;2976:228;;;;:::o;965:148:5:-;1050:4;1073:20;:33;1094:11;1073:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1066:40;;965:148;;;:::o;842:83:1:-;1308:12:4;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;905:15:1::1;913:6;905:7;:15::i;:::-;842:83:::0;:::o;2729:105:8:-;2791:13;2823:4;2816:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:105;;;:::o;823:101:0:-;1308:12:4;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;907:12:0::1;896:8;;:23;;;;;;;;;;;;;;;;;;823:101:::0;:::o;5534:1184:8:-;5788:7;:14;5774:3;:10;:28;5766:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5879:1;5865:16;;:2;:16;;;;5857:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5962:12;:10;:12::i;:::-;5954:20;;:4;:20;;;:60;;;;5978:36;5995:4;6001:12;:10;:12::i;:::-;5978:16;:36::i;:::-;5954:60;5933:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6101:16;6120:12;:10;:12::i;:::-;6101:31;;6143:60;6164:8;6174:4;6180:2;6184:3;6189:7;6198:4;6143:20;:60::i;:::-;6219:9;6214:349;6238:3;:10;6234:1;:14;6214:349;;;6269:10;6282:3;6286:1;6282:6;;;;;;;;;;;;;;6269:19;;6302:14;6319:7;6327:1;6319:10;;;;;;;;;;;;;;6302:27;;6366:123;6407:6;6366:123;;;;;;;;;;;;;;;;;:9;:13;6376:2;6366:13;;;;;;;;;;;:19;6380:4;6366:19;;;;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;6344:9;:13;6354:2;6344:13;;;;;;;;;;;:19;6358:4;6344:19;;;;;;;;;;;;;;;:145;;;;6523:29;6545:6;6523:9;:13;6533:2;6523:13;;;;;;;;;;;:17;6537:2;6523:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;6503:9;:13;6513:2;6503:13;;;;;;;;;;;:17;6517:2;6503:17;;;;;;;;;;;;;;;:49;;;;6214:349;;6250:3;;;;;6214:349;;;;6608:2;6578:47;;6602:4;6578:47;;6592:8;6578:47;;;6612:3;6617:7;6578:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6636:75;6672:8;6682:4;6688:2;6692:3;6697:7;6706:4;6636:35;:75::i;:::-;5534:1184;;;;;;:::o;616:222:1:-;712:7;:5;:7::i;:::-;696:23;;:12;:10;:12::i;:::-;:23;;;:60;;;;755:1;723:28;733:12;:10;:12::i;:::-;747:3;723:9;:28::i;:::-;:33;696:60;688:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;784:15;802:4;807:3;802:9;;;;;;;;;;;;;;;;;;784:27;;828:5;817:3;:8;;:16;;;;;;;;;;;;:::i;:::-;;616:222;;;:::o;3361:530:8:-;3534:16;3593:3;:10;3574:8;:15;:29;3566:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3660:30;3707:8;:15;3693:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3660:63;;3739:9;3734:120;3758:8;:15;3754:1;:19;3734:120;;;3813:30;3823:8;3832:1;3823:11;;;;;;;;;;;;;;3836:3;3840:1;3836:6;;;;;;;;;;;;;;3813:9;:30::i;:::-;3794:13;3808:1;3794:16;;;;;;;;;;;;;:49;;;;;3775:3;;;;;3734:120;;;;3871:13;3864:20;;;3361:530;;;;:::o;181:23:0:-;;;;;;;;;;;;;:::o;435:265::-;490:10;506:18;530:15;551:14;576:15;594:4;599:3;594:9;;;;;;;;;;;;;;;;;;576:27;;614:3;:6;;;;;;;;;;;;609:11;;;;633:3;:8;;626:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;658:3;:12;;;;;;;;;;;;647:23;;685:3;:10;;;;;;;;;;;;676:19;;435:265;;;;;;:::o;299:313:1:-;369:7;1017:8:0;;;;;;;;;;;1001:24;;:12;:10;:12::i;:::-;:24;;;993:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;384:9:1::1;403:4;:11;;;;384:31;;421:14;438:104;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;470:2;438:104;;;;;;497:15;438:104;;;;;;529:6;438:104;;;;::::0;421:121:::1;;548:4;558:3;548:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;568:24;574:6;582:2;568:24;;586:1;568:24;;;;;;;;;;;::::0;:5:::1;:24::i;:::-;605:2;598:9;;;;;;299:313:::0;;;:::o;1717:145:4:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;::::0;::::1;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;1085:85::-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;3959:306:8:-;4077:8;4061:24;;:12;:10;:12::i;:::-;:24;;;;4053:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4187:8;4142:18;:32;4161:12;:10;:12::i;:::-;4142:32;;;;;;;;;;;;;;;:42;4175:8;4142:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;4239:8;4210:48;;4225:12;:10;:12::i;:::-;4210:48;;;4249:8;4210:48;;;;;;;;;;;;;;;;;;;;3959:306;;:::o;704:84:0:-;750:7;772:4;:11;;;;765:18;;704:84;:::o;4332:166:8:-;4431:4;4454:18;:27;4473:7;4454:27;;;;;;;;;;;;;;;:37;4482:8;4454:37;;;;;;;;;;;;;;;;;;;;;;;;;4447:44;;4332:166;;;;:::o;4565:897::-;4794:1;4780:16;;:2;:16;;;;4772:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4877:12;:10;:12::i;:::-;4869:20;;:4;:20;;;:60;;;;4893:36;4910:4;4916:12;:10;:12::i;:::-;4893:16;:36::i;:::-;4869:60;4848:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5007:16;5026:12;:10;:12::i;:::-;5007:31;;5049:96;5070:8;5080:4;5086:2;5090:21;5108:2;5090:17;:21::i;:::-;5113:25;5131:6;5113:17;:25::i;:::-;5140:4;5049:20;:96::i;:::-;5178:77;5202:6;5178:77;;;;;;;;;;;;;;;;;:9;:13;5188:2;5178:13;;;;;;;;;;;:19;5192:4;5178:19;;;;;;;;;;;;;;;;:23;;:77;;;;;:::i;:::-;5156:9;:13;5166:2;5156:13;;;;;;;;;;;:19;5170:4;5156:19;;;;;;;;;;;;;;;:99;;;;5285:29;5307:6;5285:9;:13;5295:2;5285:13;;;;;;;;;;;:17;5299:2;5285:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;5265:9;:13;5275:2;5265:13;;;;;;;;;;;:17;5279:2;5265:17;;;;;;;;;;;;;;;:49;;;;5361:2;5330:46;;5355:4;5330:46;;5345:8;5330:46;;;5365:2;5369:6;5330:46;;;;;;;;;;;;;;;;;;;;;;;;5387:68;5418:8;5428:4;5434:2;5438;5442:6;5450:4;5387:30;:68::i;:::-;4565:897;;;;;;:::o;2011:240:4:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;::::0;::::1;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;598:104:13:-;651:15;685:10;678:17;;598:104;:::o;7541:86:8:-;7614:6;7607:4;:13;;;;;;;;;;;;:::i;:::-;;7541:86;:::o;12252:235::-;;;;;;;:::o;5432:163:7:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;13240:778:8:-;13484:15;:2;:13;;;:15::i;:::-;13480:532;;;13536:2;13519:43;;;13563:8;13573:4;13579:3;13584:7;13593:4;13519:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13515:487;;;;:::i;:::-;;;;;;;;13878:6;13871:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13515:487;13925:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13515:487;13659:52;;;13647:64;;;:8;:64;;;;13643:161;;13735:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13643:161;13599:219;13480:532;13240:778;;;;;;:::o;8015:572::-;8148:1;8129:21;;:7;:21;;;;8121:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8199:16;8218:12;:10;:12::i;:::-;8199:31;;8241:107;8262:8;8280:1;8284:7;8293:21;8311:2;8293:17;:21::i;:::-;8316:25;8334:6;8316:17;:25::i;:::-;8343:4;8241:20;:107::i;:::-;8384:34;8411:6;8384:9;:13;8394:2;8384:13;;;;;;;;;;;:22;8398:7;8384:22;;;;;;;;;;;;;;;;:26;;:34;;;;:::i;:::-;8359:9;:13;8369:2;8359:13;;;;;;;;;;;:22;8373:7;8359:22;;;;;;;;;;;;;;;:59;;;;8470:7;8433:57;;8466:1;8433:57;;8448:8;8433:57;;;8479:2;8483:6;8433:57;;;;;;;;;;;;;;;;;;;;;;;;8501:79;8532:8;8550:1;8554:7;8563:2;8567:6;8575:4;8501:30;:79::i;:::-;8015:572;;;;;:::o;14024:193::-;14090:16;14118:22;14157:1;14143:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14118:41;;14180:7;14169:5;14175:1;14169:8;;;;;;;;;;;;;:18;;;;;14205:5;14198:12;;;14024:193;;;:::o;12493:741::-;12712:15;:2;:13;;;:15::i;:::-;12708:520;;;12764:2;12747:38;;;12786:8;12796:4;12802:2;12806:6;12814:4;12747:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12743:475;;;;:::i;:::-;;;;;;;;13094:6;13087:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12743:475;13141:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12743:475;12880:47;;;12868:59;;;:8;:59;;;;12864:156;;12951:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12864:156;12820:214;12708:520;12493:741;;;;;;:::o;726:413:12:-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:102:14:-;;99:2;95:7;90:2;83:5;79:14;75:28;65:38;;55:54;;;:::o;115:106::-;;208:5;203:3;199:15;178:36;;168:53;;;:::o;227:833::-;;304:4;286:16;283:26;280:2;;;312:5;;280:2;350:1;347;344;329:23;372:34;403:1;397:8;372:34;:::i;:::-;433:10;428:3;425:19;415:2;;448:5;;;415:2;483;477:9;541:1;523:16;519:24;516:1;510:4;495:49;574:4;568:11;673:16;666:4;658:6;654:17;651:39;618:18;610:6;607:30;591:113;588:2;;;719:5;;;;;588:2;765:6;759:4;755:17;801:3;795:10;828:18;820:6;817:30;814:2;;;850:5;;;;;;;814:2;898:6;891:4;886:3;882:14;878:27;935:16;929:4;925:27;920:3;917:36;914:2;;;956:5;;;;;;;;914:2;1004:29;1026:6;1004:29;:::i;:::-;997:4;992:3;988:14;984:50;980:2;973:62;1051:3;1044:10;;270:790;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"../interfaces/INFT.sol\";\nimport \"./NFTBase.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\n\n\ncontract NFT is INFT, NFTBase, ERC1155(\"\") {\n\n  constructor(\n    address _operator\n  ) {\n    operator = _operator;\n  }\n\n  function mint(address _owner) external override onlyOperator returns (uint256) {\n    uint32 id = uint32(nfts.length);\n    NFT memory nft = NFT({\n      name: \"\",\n      id: id,\n      birthday: uint64(block.timestamp),\n      mintBy: _owner\n    });\n    nfts.push(nft);\n    _mint(_owner, id, 1, \"\");\n    return id;\n  }\n\n  function updateNFTName(uint256 _id, string memory _name) external {\n    require(_msgSender() == owner() || balanceOf(_msgSender(), _id) == 1, \"Permission deined\");\n    NFT storage nft = nfts[_id];\n    nft.name = _name;\n  }\n\n  function setURI(string memory newurl) external onlyOwner {\n    _setURI(newurl);\n  }\n\n}",
  "sourcePath": "/Users/wkzq/code/contracts/smartcontract-study/erc721/contracts/NFT/NFTCore.sol",
  "ast": {
    "absolutePath": "/Users/wkzq/code/contracts/smartcontract-study/erc721/contracts/NFT/NFTCore.sol",
    "exportedSymbols": {
      "Address": [
        2239
      ],
      "Context": [
        2262
      ],
      "ERC1155": [
        1765
      ],
      "ERC165": [
        390
      ],
      "IERC1155": [
        1887
      ],
      "IERC1155MetadataURI": [
        1902
      ],
      "IERC1155Receiver": [
        1943
      ],
      "IERC165": [
        402
      ],
      "INFT": [
        223
      ],
      "NFT": [
        211
      ],
      "NFTBase": [
        92
      ],
      "Ownable": [
        333
      ],
      "SafeMath": [
        757
      ]
    },
    "id": 212,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 94,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:1"
      },
      {
        "absolutePath": "/Users/wkzq/code/contracts/smartcontract-study/erc721/contracts/interfaces/INFT.sol",
        "file": "../interfaces/INFT.sol",
        "id": 95,
        "nodeType": "ImportDirective",
        "scope": 212,
        "sourceUnit": 224,
        "src": "58:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/wkzq/code/contracts/smartcontract-study/erc721/contracts/NFT/NFTBase.sol",
        "file": "./NFTBase.sol",
        "id": 96,
        "nodeType": "ImportDirective",
        "scope": 212,
        "sourceUnit": 93,
        "src": "91:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "id": 97,
        "nodeType": "ImportDirective",
        "scope": 212,
        "sourceUnit": 1766,
        "src": "115:59:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 98,
              "name": "INFT",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 223,
              "src": "193:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INFT_$223",
                "typeString": "contract INFT"
              }
            },
            "id": 99,
            "nodeType": "InheritanceSpecifier",
            "src": "193:4:1"
          },
          {
            "baseName": {
              "id": 100,
              "name": "NFTBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 92,
              "src": "199:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTBase_$92",
                "typeString": "contract NFTBase"
              }
            },
            "id": 101,
            "nodeType": "InheritanceSpecifier",
            "src": "199:7:1"
          },
          {
            "arguments": [
              {
                "hexValue": "",
                "id": 103,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "216:2:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                  "typeString": "literal_string \"\""
                },
                "value": ""
              }
            ],
            "baseName": {
              "id": 102,
              "name": "ERC1155",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1765,
              "src": "208:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155_$1765",
                "typeString": "contract ERC1155"
              }
            },
            "id": 104,
            "nodeType": "InheritanceSpecifier",
            "src": "208:11:1"
          }
        ],
        "contractDependencies": [
          92,
          223,
          333,
          390,
          402,
          1765,
          1887,
          1902,
          2262
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 211,
        "linearizedBaseContracts": [
          211,
          1765,
          1902,
          1887,
          390,
          402,
          92,
          333,
          2262,
          223
        ],
        "name": "NFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "264:31:1",
              "statements": [
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 109,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "270:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 110,
                      "name": "_operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "281:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "270:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "270:20:1"
                }
              ]
            },
            "id": 114,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "242:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "242:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "236:27:1"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "264:0:1"
            },
            "scope": 211,
            "src": "225:70:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              222
            ],
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "378:234:1",
              "statements": [
                {
                  "assignments": [
                    125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 125,
                      "mutability": "mutable",
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 160,
                      "src": "384:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 124,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "384:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 131,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 128,
                          "name": "nfts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "403:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_NFT_$18_storage_$dyn_storage",
                            "typeString": "struct NFTBase.NFT storage ref[] storage ref"
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "403:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "396:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint32_$",
                        "typeString": "type(uint32)"
                      },
                      "typeName": {
                        "id": 126,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "396:6:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "396:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "384:31:1"
                },
                {
                  "assignments": [
                    133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 133,
                      "mutability": "mutable",
                      "name": "nft",
                      "nodeType": "VariableDeclaration",
                      "scope": 160,
                      "src": "421:14:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$18_memory_ptr",
                        "typeString": "struct NFTBase.NFT"
                      },
                      "typeName": {
                        "id": 132,
                        "name": "NFT",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 18,
                        "src": "421:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$18_storage_ptr",
                          "typeString": "struct NFTBase.NFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 144,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "456:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 136,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "470:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 139,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "497:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "497:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "490:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 137,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "490:6:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "490:23:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 142,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "529:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 134,
                      "name": "NFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "438:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_NFT_$18_storage_ptr_$",
                        "typeString": "type(struct NFTBase.NFT storage pointer)"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "name",
                      "id",
                      "birthday",
                      "mintBy"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "438:104:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFT_$18_memory_ptr",
                      "typeString": "struct NFTBase.NFT memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "421:121:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 148,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "558:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$18_memory_ptr",
                          "typeString": "struct NFTBase.NFT memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NFT_$18_memory_ptr",
                          "typeString": "struct NFTBase.NFT memory"
                        }
                      ],
                      "expression": {
                        "id": 145,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "548:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFT_$18_storage_$dyn_storage",
                          "typeString": "struct NFTBase.NFT storage ref[] storage ref"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "548:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_NFT_$18_storage_$returns$__$",
                        "typeString": "function (struct NFTBase.NFT storage ref)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "548:14:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "548:14:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 152,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "574:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 153,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "582:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "586:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "589:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 151,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1313,
                      "src": "568:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "568:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "568:24:1"
                },
                {
                  "expression": {
                    "id": 158,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 125,
                    "src": "605:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 123,
                  "id": 159,
                  "nodeType": "Return",
                  "src": "598:9:1"
                }
              ]
            },
            "functionSelector": "6a627842",
            "id": 161,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 120,
                "modifierName": {
                  "id": 119,
                  "name": "onlyOperator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 91,
                  "src": "347:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "347:12:1"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 118,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "338:8:1"
            },
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "313:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "313:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "312:16:1"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "369:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "368:9:1"
            },
            "scope": 211,
            "src": "299:313:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "682:156:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 169,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2250,
                              "src": "696:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "696:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 171,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 268,
                              "src": "712:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "712:7:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "696:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 175,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2250,
                                  "src": "733:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "733:12:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 177,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 163,
                                "src": "747:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 174,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 860,
                              "src": "723:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "723:28:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "755:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "723:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "696:60:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5065726d697373696f6e206465696e6564",
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "758:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80e0f69450ee42cf4dc2394a81ce91b4f085316a5a21066b9355134f8a71a6ac",
                          "typeString": "literal_string \"Permission deined\""
                        },
                        "value": "Permission deined"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80e0f69450ee42cf4dc2394a81ce91b4f085316a5a21066b9355134f8a71a6ac",
                          "typeString": "literal_string \"Permission deined\""
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "688:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "688:90:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "688:90:1"
                },
                {
                  "assignments": [
                    186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 186,
                      "mutability": "mutable",
                      "name": "nft",
                      "nodeType": "VariableDeclaration",
                      "scope": 197,
                      "src": "784:15:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$18_storage_ptr",
                        "typeString": "struct NFTBase.NFT"
                      },
                      "typeName": {
                        "id": 185,
                        "name": "NFT",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 18,
                        "src": "784:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$18_storage_ptr",
                          "typeString": "struct NFTBase.NFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 190,
                  "initialValue": {
                    "baseExpression": {
                      "id": 187,
                      "name": "nfts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "802:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NFT_$18_storage_$dyn_storage",
                        "typeString": "struct NFTBase.NFT storage ref[] storage ref"
                      }
                    },
                    "id": 189,
                    "indexExpression": {
                      "id": 188,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "807:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "802:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFT_$18_storage",
                      "typeString": "struct NFTBase.NFT storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "784:27:1"
                },
                {
                  "expression": {
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 191,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "817:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$18_storage_ptr",
                          "typeString": "struct NFTBase.NFT storage pointer"
                        }
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "817:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 194,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "828:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "817:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "817:16:1"
                }
              ]
            },
            "functionSelector": "31fe7078",
            "id": 198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateNFTName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "639:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "639:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "652:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "638:34:1"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "682:0:1"
            },
            "scope": 211,
            "src": "616:222:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "899:26:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 206,
                        "name": "newurl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "913:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 205,
                      "name": "_setURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1231,
                      "src": "905:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "905:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "905:15:1"
                }
              ]
            },
            "functionSelector": "02fe5305",
            "id": 210,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 203,
                "modifierName": {
                  "id": 202,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 282,
                  "src": "889:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "889:9:1"
              }
            ],
            "name": "setURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "newurl",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "858:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "858:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "857:22:1"
            },
            "returnParameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "899:0:1"
            },
            "scope": 211,
            "src": "842:83:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 212,
        "src": "177:751:1"
      }
    ],
    "src": "33:895:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/wkzq/code/contracts/smartcontract-study/erc721/contracts/NFT/NFTCore.sol",
      "exportedSymbols": {
        "Address": [
          2239
        ],
        "Context": [
          2262
        ],
        "ERC1155": [
          1765
        ],
        "ERC165": [
          390
        ],
        "IERC1155": [
          1887
        ],
        "IERC1155MetadataURI": [
          1902
        ],
        "IERC1155Receiver": [
          1943
        ],
        "IERC165": [
          402
        ],
        "INFT": [
          223
        ],
        "NFT": [
          211
        ],
        "NFTBase": [
          92
        ],
        "Ownable": [
          333
        ],
        "SafeMath": [
          757
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 94,
        "name": "PragmaDirective",
        "src": "33:23:1"
      },
      {
        "attributes": {
          "SourceUnit": 224,
          "absolutePath": "/Users/wkzq/code/contracts/smartcontract-study/erc721/contracts/interfaces/INFT.sol",
          "file": "../interfaces/INFT.sol",
          "scope": 212,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 95,
        "name": "ImportDirective",
        "src": "58:32:1"
      },
      {
        "attributes": {
          "SourceUnit": 93,
          "absolutePath": "/Users/wkzq/code/contracts/smartcontract-study/erc721/contracts/NFT/NFTBase.sol",
          "file": "./NFTBase.sol",
          "scope": 212,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 96,
        "name": "ImportDirective",
        "src": "91:23:1"
      },
      {
        "attributes": {
          "SourceUnit": 1766,
          "absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
          "file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
          "scope": 212,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 97,
        "name": "ImportDirective",
        "src": "115:59:1"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            92,
            223,
            333,
            390,
            402,
            1765,
            1887,
            1902,
            2262
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            211,
            1765,
            1902,
            1887,
            390,
            402,
            92,
            333,
            2262,
            223
          ],
          "name": "NFT",
          "scope": 212
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "INFT",
                  "referencedDeclaration": 223,
                  "type": "contract INFT"
                },
                "id": 98,
                "name": "UserDefinedTypeName",
                "src": "193:4:1"
              }
            ],
            "id": 99,
            "name": "InheritanceSpecifier",
            "src": "193:4:1"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "NFTBase",
                  "referencedDeclaration": 92,
                  "type": "contract NFTBase"
                },
                "id": 100,
                "name": "UserDefinedTypeName",
                "src": "199:7:1"
              }
            ],
            "id": 101,
            "name": "InheritanceSpecifier",
            "src": "199:7:1"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "ERC1155",
                  "referencedDeclaration": 1765,
                  "type": "contract ERC1155"
                },
                "id": 102,
                "name": "UserDefinedTypeName",
                "src": "208:7:1"
              },
              {
                "attributes": {
                  "hexvalue": "",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"\"",
                  "value": ""
                },
                "id": 103,
                "name": "Literal",
                "src": "216:2:1"
              }
            ],
            "id": 104,
            "name": "InheritanceSpecifier",
            "src": "208:11:1"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 211,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_operator",
                      "scope": 114,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 105,
                        "name": "ElementaryTypeName",
                        "src": "242:7:1"
                      }
                    ],
                    "id": 106,
                    "name": "VariableDeclaration",
                    "src": "242:17:1"
                  }
                ],
                "id": 107,
                "name": "ParameterList",
                "src": "236:27:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 108,
                "name": "ParameterList",
                "src": "264:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6,
                              "type": "address",
                              "value": "operator"
                            },
                            "id": 109,
                            "name": "Identifier",
                            "src": "270:8:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 106,
                              "type": "address",
                              "value": "_operator"
                            },
                            "id": 110,
                            "name": "Identifier",
                            "src": "281:9:1"
                          }
                        ],
                        "id": 111,
                        "name": "Assignment",
                        "src": "270:20:1"
                      }
                    ],
                    "id": 112,
                    "name": "ExpressionStatement",
                    "src": "270:20:1"
                  }
                ],
                "id": 113,
                "name": "Block",
                "src": "264:31:1"
              }
            ],
            "id": 114,
            "name": "FunctionDefinition",
            "src": "225:70:1"
          },
          {
            "attributes": {
              "baseFunctions": [
                222
              ],
              "functionSelector": "6a627842",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "mint",
              "scope": 211,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 118,
                "name": "OverrideSpecifier",
                "src": "338:8:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_owner",
                      "scope": 161,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 115,
                        "name": "ElementaryTypeName",
                        "src": "313:7:1"
                      }
                    ],
                    "id": 116,
                    "name": "VariableDeclaration",
                    "src": "313:14:1"
                  }
                ],
                "id": 117,
                "name": "ParameterList",
                "src": "312:16:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 161,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 121,
                        "name": "ElementaryTypeName",
                        "src": "369:7:1"
                      }
                    ],
                    "id": 122,
                    "name": "VariableDeclaration",
                    "src": "369:7:1"
                  }
                ],
                "id": 123,
                "name": "ParameterList",
                "src": "368:9:1"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 91,
                      "type": "modifier ()",
                      "value": "onlyOperator"
                    },
                    "id": 119,
                    "name": "Identifier",
                    "src": "347:12:1"
                  }
                ],
                "id": 120,
                "name": "ModifierInvocation",
                "src": "347:12:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        125
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "id",
                          "scope": 160,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint32",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint32",
                              "type": "uint32"
                            },
                            "id": 124,
                            "name": "ElementaryTypeName",
                            "src": "384:6:1"
                          }
                        ],
                        "id": 125,
                        "name": "VariableDeclaration",
                        "src": "384:9:1"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint32",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "type(uint32)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint32"
                                },
                                "id": 126,
                                "name": "ElementaryTypeName",
                                "src": "396:6:1"
                              }
                            ],
                            "id": 127,
                            "name": "ElementaryTypeNameExpression",
                            "src": "396:6:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 9,
                                  "type": "struct NFTBase.NFT storage ref[] storage ref",
                                  "value": "nfts"
                                },
                                "id": 128,
                                "name": "Identifier",
                                "src": "403:4:1"
                              }
                            ],
                            "id": 129,
                            "name": "MemberAccess",
                            "src": "403:11:1"
                          }
                        ],
                        "id": 130,
                        "name": "FunctionCall",
                        "src": "396:19:1"
                      }
                    ],
                    "id": 131,
                    "name": "VariableDeclarationStatement",
                    "src": "384:31:1"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        133
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "nft",
                          "scope": 160,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct NFTBase.NFT",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "NFT",
                              "referencedDeclaration": 18,
                              "type": "struct NFTBase.NFT"
                            },
                            "id": 132,
                            "name": "UserDefinedTypeName",
                            "src": "421:3:1"
                          }
                        ],
                        "id": 133,
                        "name": "VariableDeclaration",
                        "src": "421:14:1"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            "name",
                            "id",
                            "birthday",
                            "mintBy"
                          ],
                          "tryCall": false,
                          "type": "struct NFTBase.NFT memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 18,
                              "type": "type(struct NFTBase.NFT storage pointer)",
                              "value": "NFT"
                            },
                            "id": 134,
                            "name": "Identifier",
                            "src": "438:3:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"\"",
                              "value": ""
                            },
                            "id": 135,
                            "name": "Literal",
                            "src": "456:2:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 125,
                              "type": "uint32",
                              "value": "id"
                            },
                            "id": 136,
                            "name": "Identifier",
                            "src": "470:2:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint64",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint64)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint64"
                                    },
                                    "id": 137,
                                    "name": "ElementaryTypeName",
                                    "src": "490:6:1"
                                  }
                                ],
                                "id": 138,
                                "name": "ElementaryTypeNameExpression",
                                "src": "490:6:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967292,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 139,
                                    "name": "Identifier",
                                    "src": "497:5:1"
                                  }
                                ],
                                "id": 140,
                                "name": "MemberAccess",
                                "src": "497:15:1"
                              }
                            ],
                            "id": 141,
                            "name": "FunctionCall",
                            "src": "490:23:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 116,
                              "type": "address",
                              "value": "_owner"
                            },
                            "id": 142,
                            "name": "Identifier",
                            "src": "529:6:1"
                          }
                        ],
                        "id": 143,
                        "name": "FunctionCall",
                        "src": "438:104:1"
                      }
                    ],
                    "id": 144,
                    "name": "VariableDeclarationStatement",
                    "src": "421:121:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_NFT_$18_memory_ptr",
                                  "typeString": "struct NFTBase.NFT memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "type": "function (struct NFTBase.NFT storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 9,
                                  "type": "struct NFTBase.NFT storage ref[] storage ref",
                                  "value": "nfts"
                                },
                                "id": 145,
                                "name": "Identifier",
                                "src": "548:4:1"
                              }
                            ],
                            "id": 147,
                            "name": "MemberAccess",
                            "src": "548:9:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 133,
                              "type": "struct NFTBase.NFT memory",
                              "value": "nft"
                            },
                            "id": 148,
                            "name": "Identifier",
                            "src": "558:3:1"
                          }
                        ],
                        "id": 149,
                        "name": "FunctionCall",
                        "src": "548:14:1"
                      }
                    ],
                    "id": 150,
                    "name": "ExpressionStatement",
                    "src": "548:14:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1313,
                              "type": "function (address,uint256,uint256,bytes memory)",
                              "value": "_mint"
                            },
                            "id": 151,
                            "name": "Identifier",
                            "src": "568:5:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 116,
                              "type": "address",
                              "value": "_owner"
                            },
                            "id": 152,
                            "name": "Identifier",
                            "src": "574:6:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 125,
                              "type": "uint32",
                              "value": "id"
                            },
                            "id": 153,
                            "name": "Identifier",
                            "src": "582:2:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 154,
                            "name": "Literal",
                            "src": "586:1:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"\"",
                              "value": ""
                            },
                            "id": 155,
                            "name": "Literal",
                            "src": "589:2:1"
                          }
                        ],
                        "id": 156,
                        "name": "FunctionCall",
                        "src": "568:24:1"
                      }
                    ],
                    "id": 157,
                    "name": "ExpressionStatement",
                    "src": "568:24:1"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 123
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 125,
                          "type": "uint32",
                          "value": "id"
                        },
                        "id": 158,
                        "name": "Identifier",
                        "src": "605:2:1"
                      }
                    ],
                    "id": 159,
                    "name": "Return",
                    "src": "598:9:1"
                  }
                ],
                "id": 160,
                "name": "Block",
                "src": "378:234:1"
              }
            ],
            "id": 161,
            "name": "FunctionDefinition",
            "src": "299:313:1"
          },
          {
            "attributes": {
              "functionSelector": "31fe7078",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "updateNFTName",
              "scope": 211,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_id",
                      "scope": 198,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 162,
                        "name": "ElementaryTypeName",
                        "src": "639:7:1"
                      }
                    ],
                    "id": 163,
                    "name": "VariableDeclaration",
                    "src": "639:11:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_name",
                      "scope": 198,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 164,
                        "name": "ElementaryTypeName",
                        "src": "652:6:1"
                      }
                    ],
                    "id": 165,
                    "name": "VariableDeclaration",
                    "src": "652:19:1"
                  }
                ],
                "id": 166,
                "name": "ParameterList",
                "src": "638:34:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 167,
                "name": "ParameterList",
                "src": "682:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_80e0f69450ee42cf4dc2394a81ce91b4f085316a5a21066b9355134f8a71a6ac",
                                  "typeString": "literal_string \"Permission deined\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 168,
                            "name": "Identifier",
                            "src": "688:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "||",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "address payable",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2250,
                                          "type": "function () view returns (address payable)",
                                          "value": "_msgSender"
                                        },
                                        "id": 169,
                                        "name": "Identifier",
                                        "src": "696:10:1"
                                      }
                                    ],
                                    "id": 170,
                                    "name": "FunctionCall",
                                    "src": "696:12:1"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "address",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 268,
                                          "type": "function () view returns (address)",
                                          "value": "owner"
                                        },
                                        "id": 171,
                                        "name": "Identifier",
                                        "src": "712:5:1"
                                      }
                                    ],
                                    "id": 172,
                                    "name": "FunctionCall",
                                    "src": "712:7:1"
                                  }
                                ],
                                "id": 173,
                                "name": "BinaryOperation",
                                "src": "696:23:1"
                              },
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 860,
                                          "type": "function (address,uint256) view returns (uint256)",
                                          "value": "balanceOf"
                                        },
                                        "id": 174,
                                        "name": "Identifier",
                                        "src": "723:9:1"
                                      },
                                      {
                                        "attributes": {
                                          "arguments": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "address payable",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                null
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2250,
                                              "type": "function () view returns (address payable)",
                                              "value": "_msgSender"
                                            },
                                            "id": 175,
                                            "name": "Identifier",
                                            "src": "733:10:1"
                                          }
                                        ],
                                        "id": 176,
                                        "name": "FunctionCall",
                                        "src": "733:12:1"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 163,
                                          "type": "uint256",
                                          "value": "_id"
                                        },
                                        "id": 177,
                                        "name": "Identifier",
                                        "src": "747:3:1"
                                      }
                                    ],
                                    "id": 178,
                                    "name": "FunctionCall",
                                    "src": "723:28:1"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 179,
                                    "name": "Literal",
                                    "src": "755:1:1"
                                  }
                                ],
                                "id": 180,
                                "name": "BinaryOperation",
                                "src": "723:33:1"
                              }
                            ],
                            "id": 181,
                            "name": "BinaryOperation",
                            "src": "696:60:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5065726d697373696f6e206465696e6564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Permission deined\"",
                              "value": "Permission deined"
                            },
                            "id": 182,
                            "name": "Literal",
                            "src": "758:19:1"
                          }
                        ],
                        "id": 183,
                        "name": "FunctionCall",
                        "src": "688:90:1"
                      }
                    ],
                    "id": 184,
                    "name": "ExpressionStatement",
                    "src": "688:90:1"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        186
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "nft",
                          "scope": 197,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct NFTBase.NFT",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "NFT",
                              "referencedDeclaration": 18,
                              "type": "struct NFTBase.NFT"
                            },
                            "id": 185,
                            "name": "UserDefinedTypeName",
                            "src": "784:3:1"
                          }
                        ],
                        "id": 186,
                        "name": "VariableDeclaration",
                        "src": "784:15:1"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct NFTBase.NFT storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 9,
                              "type": "struct NFTBase.NFT storage ref[] storage ref",
                              "value": "nfts"
                            },
                            "id": 187,
                            "name": "Identifier",
                            "src": "802:4:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 163,
                              "type": "uint256",
                              "value": "_id"
                            },
                            "id": 188,
                            "name": "Identifier",
                            "src": "807:3:1"
                          }
                        ],
                        "id": 189,
                        "name": "IndexAccess",
                        "src": "802:9:1"
                      }
                    ],
                    "id": 190,
                    "name": "VariableDeclarationStatement",
                    "src": "784:27:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "name",
                              "referencedDeclaration": 11,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 186,
                                  "type": "struct NFTBase.NFT storage pointer",
                                  "value": "nft"
                                },
                                "id": 191,
                                "name": "Identifier",
                                "src": "817:3:1"
                              }
                            ],
                            "id": 193,
                            "name": "MemberAccess",
                            "src": "817:8:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 165,
                              "type": "string memory",
                              "value": "_name"
                            },
                            "id": 194,
                            "name": "Identifier",
                            "src": "828:5:1"
                          }
                        ],
                        "id": 195,
                        "name": "Assignment",
                        "src": "817:16:1"
                      }
                    ],
                    "id": 196,
                    "name": "ExpressionStatement",
                    "src": "817:16:1"
                  }
                ],
                "id": 197,
                "name": "Block",
                "src": "682:156:1"
              }
            ],
            "id": 198,
            "name": "FunctionDefinition",
            "src": "616:222:1"
          },
          {
            "attributes": {
              "functionSelector": "02fe5305",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setURI",
              "scope": 211,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "newurl",
                      "scope": 210,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 199,
                        "name": "ElementaryTypeName",
                        "src": "858:6:1"
                      }
                    ],
                    "id": 200,
                    "name": "VariableDeclaration",
                    "src": "858:20:1"
                  }
                ],
                "id": 201,
                "name": "ParameterList",
                "src": "857:22:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 204,
                "name": "ParameterList",
                "src": "899:0:1"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 282,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 202,
                    "name": "Identifier",
                    "src": "889:9:1"
                  }
                ],
                "id": 203,
                "name": "ModifierInvocation",
                "src": "889:9:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1231,
                              "type": "function (string memory)",
                              "value": "_setURI"
                            },
                            "id": 205,
                            "name": "Identifier",
                            "src": "905:7:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 200,
                              "type": "string memory",
                              "value": "newurl"
                            },
                            "id": 206,
                            "name": "Identifier",
                            "src": "913:6:1"
                          }
                        ],
                        "id": 207,
                        "name": "FunctionCall",
                        "src": "905:15:1"
                      }
                    ],
                    "id": 208,
                    "name": "ExpressionStatement",
                    "src": "905:15:1"
                  }
                ],
                "id": 209,
                "name": "Block",
                "src": "899:26:1"
              }
            ],
            "id": 210,
            "name": "FunctionDefinition",
            "src": "842:83:1"
          }
        ],
        "id": 211,
        "name": "ContractDefinition",
        "src": "177:751:1"
      }
    ],
    "id": 212,
    "name": "SourceUnit",
    "src": "33:895:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x44C3a527AD03ce9fCe2d302b20d3124a99386EAD",
      "transactionHash": "0x21008cc71a721d4bc13d41afd720e18bd2cded2d3be404052925b88fe313425c"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-03T10:32:24.519Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}